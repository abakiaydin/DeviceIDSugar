CompilationUnit([PackageDec([],PackageName([Id("concretesyntax")])),TypeImportDec(Id("org.sugarj.languages.Stratego")),ExtensionDec(ExtensionDecHead([Public],Id("MetaExplode")),ExtensionBody([transformation-elem(Desugarings([PureDesugaring(CallNoArgs(SVar("meta-explode")))])),transformation-elem(Signature([Constructors([OpDecl("ToTerm",FunType([ConstType(SortVar("a"))],ConstType(SortNoArgs("Term")))),OpDecl("FromTerm",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortVar("a")))),OpDecl("ToBuild",FunType([ConstType(SortVar("a"))],ConstType(SortNoArgs("Strategy")))),OpDecl("FromApp",FunType([ConstType(SortNoArgs("Strategy"))],ConstType(SortVar("a")))),OpDecl("ToStrategy",FunType([ConstType(SortVar("a"))],ConstType(SortNoArgs("Strategy")))),OpDecl("FromStrategy",FunType([ConstType(SortNoArgs("Strategy"))],ConstType(SortVar("a")))),OpDecl("WithAnno",FunType([ConstType(SortVar("a")),ConstType(SortNoArgs("ListTerm"))],ConstType(SortVar("a")))),OpDecl("meta-var",FunType([ConstType(SortNoArgs("String"))],ConstType(SortVar("a")))),OpDecl("meta-listvar",FunType([ConstType(SortNoArgs("String"))],ConstType(SortVar("a")))),OpDecl("Cong",FunType([ConstType(SortNoArgs("String")),ConstType(Sort("List",[SortNoArgs("Strategy")]))],ConstType(SortNoArgs("Strategy")))),OpDecl("Ins",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Term")))),OpDecl("ManglePrefix",FunType([ConstType(SortNoArgs("String")),ConstType(SortNoArgs("Var"))],ConstType(SortNoArgs("Term")))),OpDecl("MangleSuffix",FunType([ConstType(SortNoArgs("Var")),ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Term"))))])])),transformation-elem(Signature([Constructors([OpDecl("AsFix",ConstType(SortNoArgs("Option"))),OpDecl("appl",FunType([ConstType(SortNoArgs("Term")),ConstType(Sort("List",[SortNoArgs("Term")]))],ConstType(SortNoArgs("Term")))),OpDecl("prod",FunType([ConstType(Sort("List",[SortNoArgs("Term")])),ConstType(SortNoArgs("Term")),ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Term")))),OpDecl("cf",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Term")))),OpDecl("opt",FunType([ConstType(SortNoArgs("Term"))],ConstType(SortNoArgs("Term")))),OpDecl("layout",ConstType(SortNoArgs("Term"))),OpDecl("ConsAux",FunType([ConstType(SortVar("a")),ConstType(Sort("List",[SortVar("a")]))],ConstType(Sort("List",[SortVar("a")]))))])])),transformation-elem(Rules([RDefNoArgs("Clean",RuleNoCond(NoAnnoList(Op("Op",[NoAnnoList(Str("\"Wld\"")),NoAnnoList(List([]))])),NoAnnoList(Op("Wld",[])))),RDefNoArgs("Clean",Rule(NoAnnoList(Op("Op",[Var("i"),NoAnnoList(List([]))])),NoAnnoList(Op("NoAnnoList",[NoAnnoList(Op("Int",[App(CallNoArgs(SVar("int-to-string")),Var("i"))]))])),BA(CallNoArgs(SVar("is-int")),Var("i"))))])),transformation-elem(Strategies([SDefNoArgs("meta-explode",Seq(CallNoArgs(SVar("MetaExplode")),Call(SVar("topdown"),[Call(SVar("try"),[CallNoArgs(SVar("Clean"))])]))),SDefNoArgs("MetaExplode",Call(SVar("alltd"),[Choice(Call(SVar("Anno"),[Match(NoAnnoList(Op("ToTerm",[RootApp(CallNoArgs(SVar("pretrm-explode")))]))),CallNoArgs(SVar("MetaExplode"))]),Choice(Call(SVar("AnnoList"),[Match(NoAnnoList(Op("ToTerm",[RootApp(CallNoArgs(SVar("pretrm-explode")))]))),CallNoArgs(SVar("MetaExplode"))]),Choice(Call(SVar("NoAnnoList"),[Match(NoAnnoList(Op("ToTerm",[RootApp(CallNoArgs(SVar("pretrm-explode")))])))]),Choice(Match(NoAnnoList(Op("ToTerm",[RootApp(CallNoArgs(SVar("trm-explode")))]))),Choice(Match(NoAnnoList(Op("ToMetaExpr",[RootApp(CallNoArgs(SVar("trm-explode")))]))),Choice(Match(NoAnnoList(Op("ToMetaListExpr",[RootApp(CallNoArgs(SVar("trm-explode")))]))),Choice(Match(NoAnnoList(Op("ToBuild",[RootApp(Build(NoAnnoList(Op("Build",[RootApp(CallNoArgs(SVar("trm-explode")))]))))]))),Match(NoAnnoList(Op("ToStrategy",[RootApp(CallNoArgs(SVar("str-explode")))]))))))))))])),SDefNoArgs("trm-explode",LChoice(CallNoArgs(SVar("ToTermToTerm")),LChoice(CallNoArgs(SVar("TrmMetaVar")),LChoice(CallNoArgs(SVar("LstMetaVar")),LChoice(CallNoArgs(SVar("TrmFromTerm")),LChoice(CallNoArgs(SVar("TrmFromApp")),LChoice(CallNoArgs(SVar("TrmFromStr")),LChoice(CallNoArgs(SVar("TrmAnno")),LChoice(Seq(CallNoArgs(SVar("ConcAssocR")),CallNoArgs(SVar("trm-explode"))),LChoice(Seq(CallNoArgs(SVar("ConcCons")),CallNoArgs(SVar("trm-explode"))),LChoice(Seq(CallNoArgs(SVar("ConcNil")),CallNoArgs(SVar("trm-explode"))),Build(NoAnnoList(Op("NoAnnoList",[RootApp(LChoice(CallNoArgs(SVar("TrmInt")),LChoice(CallNoArgs(SVar("TrmStr")),LChoice(CallNoArgs(SVar("TrmConc")),LChoice(CallNoArgs(SVar("TrmNil")),LChoice(CallNoArgs(SVar("TrmCons")),CallNoArgs(SVar("TrmOp"))))))))])))))))))))))),SDefNoArgs("pretrm-explode",LChoice(CallNoArgs(SVar("ToTermToTerm")),LChoice(CallNoArgs(SVar("TrmMetaVar")),LChoice(CallNoArgs(SVar("LstMetaVar")),LChoice(CallNoArgs(SVar("TrmInt")),LChoice(CallNoArgs(SVar("TrmStr")),LChoice(CallNoArgs(SVar("TrmFromTerm")),LChoice(CallNoArgs(SVar("TrmFromApp")),LChoice(CallNoArgs(SVar("TrmFromStr")),LChoice(Seq(CallNoArgs(SVar("TrmAnno")),CallT(SVar("fatal-err"),[],[NoAnnoList(Str("\"anno in anno\""))])),LChoice(Seq(CallNoArgs(SVar("ConcAssocR")),CallNoArgs(SVar("pretrm-explode"))),LChoice(Seq(CallNoArgs(SVar("ConcCons")),CallNoArgs(SVar("pretrm-explode"))),LChoice(Seq(CallNoArgs(SVar("ConcNil")),CallNoArgs(SVar("pretrm-explode"))),LChoice(CallNoArgs(SVar("TrmConc")),LChoice(CallNoArgs(SVar("TrmNil")),LChoice(CallNoArgs(SVar("TrmCons")),CallNoArgs(SVar("TrmOp")))))))))))))))))),SDefNoArgs("ToTermToTerm",Seq(Match(NoAnnoList(Op("ToTerm",[Var("t")]))),CallNoArgs(SVar("quoted-trm-explode")))),SDefNoArgs("quoted-trm-explode",CallNoArgs(SVar("QuotedOp"))),RDefNoArgs("QuotedOp",RuleNoCond(NoAnnoList(Explode(Var("op"),Var("ts"))),NoAnnoList(Op("Op",[Var("op"),App(Call(SVar("map"),[CallNoArgs(SVar("quoted-trm-explode"))]),Var("ts"))])))),RDefNoArgs("TrmOp",RuleNoCond(NoAnnoList(Explode(Var("op"),Var("ts"))),NoAnnoList(Op("Op",[Var("op"),App(Call(SVar("map"),[CallNoArgs(SVar("trm-explode"))]),Var("ts"))])))),RDefNoArgs("TrmMetaVar",RuleNoCond(NoAnnoList(Op("meta-var",[Var("x")])),NoAnnoList(Op("Var",[Var("x")])))),RDefNoArgs("LstMetaVar",Rule(NoAnnoList(Op("meta-listvar",[Var("x")])),NoAnnoList(Op("Var",[Var("y")])),AM(CondChoice(AM(BA(Seq(CallNoArgs(SVar("explode-string")),CallNoArgs(SVar("last"))),Var("x")),NoAnnoList(Char("'*'"))),Build(NoAnnoList(Op("ListVar",[Var("x")]))),Build(Var("x"))),Var("y")))),SDefNoArgs("TrmInt",Build(NoAnnoList(Op("Int",[RootApp(Seq(CallNoArgs(SVar("is-int")),CallNoArgs(SVar("int-to-string"))))])))),SDefNoArgs("TrmStr",Build(NoAnnoList(Op("Str",[RootApp(CallNoArgs(SVar("is-string")))])))),SDefNoArgs("TrmFromTerm",Match(NoAnnoList(Op("FromTerm",[RootApp(CallNoArgs(SVar("MetaExplode")))])))),SDefNoArgs("TrmFromTerm",Match(NoAnnoList(Op("FromMetaExpr",[RootApp(CallNoArgs(SVar("MetaExplode")))])))),SDefNoArgs("TrmFromTerm",Match(NoAnnoList(Op("FromMetaListExpr",[RootApp(CallNoArgs(SVar("MetaExplode")))])))),SDefNoArgs("TrmFromStr",Match(NoAnnoList(Op("FromStrategy",[RootApp(CallNoArgs(SVar("MetaExplode")))])))),SDefNoArgs("TrmFromApp",Match(NoAnnoList(Op("FromApp",[RootApp(Build(NoAnnoList(Op("RootApp",[RootApp(CallNoArgs(SVar("MetaExplode")))]))))])))),RDefNoArgs("TrmAnno",Rule(NoAnnoList(Op("WithAnno",[Var("t1"),Var("t2")])),NoAnnoList(Op("Anno",[Var("t1'"),Var("t2'")])),Seq(AM(BA(Seq(CallNoArgs(SVar("trm-explode")),Call(SVar("try"),[Match(NoAnnoList(Op("NoAnnoList",[RootApp(Id)])))])),Var("t1")),Var("t1'")),Seq(LChoice(BA(CallNoArgs(SVar("is-list")),Var("t2")),Build(NoAnnoList(List([Var("t2")])))),Seq(Call(SVar("foldr"),[Build(NoAnnoList(Op("NoAnnoList",[NoAnnoList(Op("Op",[NoAnnoList(Str("\"Nil\"")),NoAnnoList(List([]))]))]))),Build(NoAnnoList(Op("NoAnnoList",[NoAnnoList(Op("Op",[NoAnnoList(Str("\"Cons\"")),NoAnnoList(List([RootApp(CallNoArgs(SVar("Fst"))),RootApp(CallNoArgs(SVar("Snd")))]))]))]))),CallNoArgs(SVar("MetaExplode"))]),AM(Call(SVar("try"),[Match(NoAnnoList(Op("NoAnnoList",[RootApp(Id)])))]),Var("t2'"))))))),RDefNoArgs("TrmNil",RuleNoCond(NoAnnoList(List([])),NoAnnoList(Op("Op",[NoAnnoList(Str("\"Nil\"")),NoAnnoList(List([]))])))),RDefNoArgs("TrmCons",RuleNoCond(NoAnnoList(ListTail([Var("x")],Var("xs"))),NoAnnoList(Op("Op",[NoAnnoList(Str("\"Cons\"")),NoAnnoList(List([App(CallNoArgs(SVar("trm-explode")),Var("x")),App(CallNoArgs(SVar("trm-explode")),Var("xs"))]))])))),RDefNoArgs("TrmCons",RuleNoCond(NoAnnoList(Op("ConsAux",[Var("x"),Var("xs")])),NoAnnoList(Op("Op",[NoAnnoList(Str("\"Cons\"")),NoAnnoList(List([App(CallNoArgs(SVar("trm-explode")),Var("x")),App(CallNoArgs(SVar("trm-explode")),Var("xs"))]))])))),RDefNoArgs("ConcAssocR",RuleNoCond(NoAnnoList(Op("Conc",[NoAnnoList(Op("Conc",[Var("t1"),Var("t2")])),Var("t3")])),NoAnnoList(Explode(NoAnnoList(Str("\"Conc\"")),NoAnnoList(List([Var("t1"),NoAnnoList(Explode(NoAnnoList(Str("\"Conc\"")),NoAnnoList(List([Var("t2"),Var("t3")]))))])))))),RDefNoArgs("ConcCons",RuleNoCond(NoAnnoList(Op("Conc",[NoAnnoList(ListTail([Var("t1")],Var("t2"))),Var("t3")])),NoAnnoList(Op("ConsAux",[Var("t1"),NoAnnoList(Explode(NoAnnoList(Str("\"Conc\"")),NoAnnoList(List([Var("t2"),Var("t3")]))))])))),RDefNoArgs("ConcCons",RuleNoCond(NoAnnoList(Op("Conc",[NoAnnoList(Op("ConsAux",[Var("t1"),Var("t2")])),Var("t3")])),NoAnnoList(Op("ConsAux",[Var("t1"),NoAnnoList(Explode(NoAnnoList(Str("\"Conc\"")),NoAnnoList(List([Var("t2"),Var("t3")]))))])))),RDefNoArgs("ConcNil",RuleNoCond(NoAnnoList(Op("Conc",[NoAnnoList(List([])),Var("t")])),Var("t"))),RDefNoArgs("ConcNil",RuleNoCond(NoAnnoList(Op("Conc",[Var("t"),NoAnnoList(List([]))])),Var("t"))),RDefNoArgs("TrmConc",RuleNoCond(NoAnnoList(Op("Conc",[Var("t1"),Var("t2")])),NoAnnoList(Op("Op",[NoAnnoList(Str("\"Conc\"")),NoAnnoList(List([App(CallNoArgs(SVar("trm-explode")),Var("t1")),App(CallNoArgs(SVar("trm-explode")),Var("t2"))]))])))),RDefNoArgs("TrmFromMangle",RuleNoCond(NoAnnoList(Op("ManglePrefix",[Var("x"),Var("y")])),NoAnnoList(Op("App",[NoAnnoList(Op("Call",[NoAnnoList(Op("SVar",[NoAnnoList(Str("\"conc-strings\""))])),NoAnnoList(List([]))])),NoAnnoList(Op("Tuple",[NoAnnoList(List([NoAnnoList(Op("Str",[Var("x")])),NoAnnoList(Op("Var",[Var("y")]))]))]))])))),RDefNoArgs("TrmFromMangle",RuleNoCond(NoAnnoList(Op("MangleSuffix",[Var("x"),Var("y")])),NoAnnoList(Op("App",[NoAnnoList(Op("Call",[NoAnnoList(Op("SVar",[NoAnnoList(Str("\"conc-strings\""))])),NoAnnoList(List([]))])),NoAnnoList(Op("Tuple",[NoAnnoList(List([NoAnnoList(Op("Var",[Var("x")])),NoAnnoList(Op("Str",[Var("y")]))]))]))])))),SDefNoArgs("str-explode",LChoice(LRule(RuleNoCond(NoAnnoList(Op("meta-var",[Var("x")])),NoAnnoList(Op("Match",[NoAnnoList(Op("Var",[Var("x")]))])))),LChoice(CallNoArgs(SVar("TrmFromTerm")),LChoice(CallNoArgs(SVar("TrmFromStr")),LChoice(Match(NoAnnoList(Op("FromApp",[RootApp(CallNoArgs(SVar("MetaExplode")))]))),LChoice(LRule(RuleNoCond(NoAnnoList(List([])),NoAnnoList(Op("Cong",[NoAnnoList(Str("\"Nil\"")),NoAnnoList(List([]))])))),LChoice(LRule(RuleNoCond(NoAnnoList(ListTail([Var("t")],Var("ts"))),NoAnnoList(Op("Cong",[NoAnnoList(Str("\"Cons\"")),NoAnnoList(List([App(CallNoArgs(SVar("str-explode")),Var("t")),App(CallNoArgs(SVar("str-explode")),Var("ts"))]))])))),LChoice(Seq(CallNoArgs(SVar("is-string")),Build(NoAnnoList(Op("Match",[NoAnnoList(Op("NoAnnoList",[NoAnnoList(Op("Str",[RootApp(Id)]))]))])))),LRule(RuleNoCond(NoAnnoList(Explode(Var("op"),Var("ts"))),NoAnnoList(Op("Cong",[Var("op"),App(Call(SVar("map"),[CallNoArgs(SVar("str-explode"))]),Var("ts"))]))))))))))))])),transformation-elem(Signature([Constructors([OpDecl("ToMetaExpr",FunType([ConstType(SortVar("a"))],ConstType(SortVar("b")))),OpDecl("ToMetaListExpr",FunType([ConstType(SortVar("a"))],ConstType(SortVar("b")))),OpDecl("FromMetaExpr",FunType([ConstType(SortVar("a"))],ConstType(SortNoArgs("StrategoTerm")))),OpDecl("FromMetaListExpr",FunType([ConstType(SortVar("a"))],ConstType(SortNoArgs("StrategoTerm"))))])]))]))])