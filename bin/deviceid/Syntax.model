CompilationUnit([PackageDec([],PackageName([Id("deviceid")])),TypeImportDec(Id("org.sugarj.languages.Java")),TypeImportDec(Id("concretesyntax.Java")),ExtensionDec(ExtensionDecHead([Public],Id("Syntax")),ExtensionBody([grammar-elem(context-free-syntax([prod([lit("\"resource\""),iter-star(alt(sort("JavaAnno"),sort("JavaVarMod"))),sort("JavaType"),iter-sep(sort("JavaVarDec"),lit("\",\"")),sort("ResAccDecs"),lit("\";\"")],sort("ResDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResDec\""))])))])),prod([sort("ResBlock")],sort("ResMethodBody"),no-attrs),prod([lit("\"{\""),iter-star(sort("ResMethodBodyDec")),lit("\"}\"")],sort("ResBlock"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResBlock\""))])))])),prod([sort("ResDec")],sort("ResMethodBodyDec"),no-attrs),prod([sort("JavaBlockStm")],sort("ResMethodBodyDec"),no-attrs),prod([lit("\"{\""),iter-sep(sort("ResAccDec"),lit("\",\"")),lit("\"}\"")],sort("ResAccDecs"),no-attrs),prod([sort("JavaMethodDecHead"),sort("ResMethodBody")],sort("ResMethodDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResMethodDec\""))])))])),prod([lit("\"model\"")],sort("ResAccDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResAccModel\""))])))])),prod([lit("\"origin\"")],sort("ResAccDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResAccOrigin\""))])))])),prod([lit("\"serial_number\"")],sort("ResAccDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResAccSerial\""))])))])),prod([lit("\"svn\"")],sort("ResAccDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResAccSvn\""))])))])),prod([lit("\"cd\"")],sort("ResAccDec"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResAccCd\""))])))])),prod([sort("JavaId"),sort("ResAccDecs")],sort("JavaExpr"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ResExpr\""))])))]))])),transformation-elem(Signature([Constructors([OpDecl("ResDec",FunType([ConstType(Sort("iter-star",[])),ConstType(Sort("JavaType",[])),ConstType(Sort("iter-sep",[])),ConstType(Sort("ResAccDecs",[]))],ConstType(Sort("ResDec",[])))),OpDecl("ResBlock",FunType([ConstType(Sort("iter-star",[]))],ConstType(Sort("ResBlock",[])))),OpDecl("ResMethodDec",FunType([ConstType(Sort("JavaMethodDecHead",[])),ConstType(Sort("ResMethodBody",[]))],ConstType(Sort("ResMethodDec",[])))),OpDecl("ResAccModel",ConstType(Sort("ResAccDec",[]))),OpDecl("ResAccOrigin",ConstType(Sort("ResAccDec",[]))),OpDecl("ResAccSerial",ConstType(Sort("ResAccDec",[]))),OpDecl("ResAccSvn",ConstType(Sort("ResAccDec",[]))),OpDecl("ResAccCd",ConstType(Sort("ResAccDec",[]))),OpDecl("ResExpr",FunType([ConstType(Sort("JavaId",[])),ConstType(Sort("ResAccDecs",[]))],ConstType(Sort("JavaExpr",[]))))])])),transformation-elem(Desugarings([InjectDesugaring(CallNoArgs(SVar("resAcc")),sort("ResMethodDec"),sort("JavaMethodDec"),no-attrs),InjectDesugaring(CallNoArgs(SVar("resEStm")),sort("ResExpr"),sort("JavaInvoke"),no-attrs)])),transformation-elem(Rules([RDefNoArgs("resFields",RuleNoCond(NoAnnoList(Op("ResAccModel",[])),NoAnnoList(Op("Lit",[NoAnnoList(Op("String",[NoAnnoList(List([NoAnnoList(Op("Chars",[NoAnnoList(Str("\"model\""))]))]))]))])))),RDefNoArgs("resFields",RuleNoCond(NoAnnoList(Op("ResAccOrigin",[])),NoAnnoList(Op("Lit",[NoAnnoList(Op("String",[NoAnnoList(List([NoAnnoList(Op("Chars",[NoAnnoList(Str("\"origin\""))]))]))]))])))),RDefNoArgs("resFields",RuleNoCond(NoAnnoList(Op("ResAccSerial",[])),NoAnnoList(Op("Lit",[NoAnnoList(Op("String",[NoAnnoList(List([NoAnnoList(Op("Chars",[NoAnnoList(Str("\"serialNumber\""))]))]))]))])))),RDefNoArgs("resFields",RuleNoCond(NoAnnoList(Op("ResAccSvn",[])),NoAnnoList(Op("Lit",[NoAnnoList(Op("String",[NoAnnoList(List([NoAnnoList(Op("Chars",[NoAnnoList(Str("\"svn\""))]))]))]))])))),RDefNoArgs("resFields",RuleNoCond(NoAnnoList(Op("ResAccCd",[])),NoAnnoList(Op("Lit",[NoAnnoList(Op("String",[NoAnnoList(List([NoAnnoList(Op("Chars",[NoAnnoList(Str("\"cd\""))]))]))]))]))))])),transformation-elem(Strategies([SDefNoArgs("resFieldToString",Call(SVar("map"),[CallNoArgs(SVar("resFields"))]))])),transformation-elem(Rules([RDefNoArgs("resAcc",RuleNoCond(NoAnnoList(Op("ResMethodDec",[NoAnnoList(Op("MethodDecHead",[Var("mods"),Var("a"),Var("b"),NoAnnoList(Op("Id",[Var("methodname")])),Var("d"),Var("e")])),NoAnnoList(Op("ResBlock",[Var("f")]))])),NoAnnoList(Op("MethodDec",[NoAnnoList(Op("MethodDecHead",[Var("mods"),Var("a"),Var("b"),NoAnnoList(Op("Id",[Var("methodname")])),Var("d"),Var("e")])),NoAnnoList(Op("Block",[App(CallNoArgs(SVar("concat")),NoAnnoList(List([App(CallNoArgs(SVar("genLocalVarDecs")),Var("f")),App(CallNoArgs(SVar("removeResDecs")),Var("f"))])))]))])))),RDefNoArgs("resEStm",RuleNoCond(NoAnnoList(Op("ResExpr",[Var("a"),Var("b")])),NoAnnoList(Op("Invoke",[NoAnnoList(Op("Method",[NoAnnoList(Op("MethodName",[NoAnnoList(Op("AmbName",[Var("a")])),NoAnnoList(Op("Id",[NoAnnoList(Str("\"get\""))]))]))])),App(CallNoArgs(SVar("resFieldToString")),Var("b"))]))))])),transformation-elem(Strategies([SDefNoArgs("filterResDecs",Call(SVar("filter"),[Match(NoAnnoList(Op("ResDec",[Wld,Wld,Wld,Wld])))])),SDefNoArgs("removeResDecs",Call(SVar("remove-all"),[Match(NoAnnoList(Op("ResDec",[Wld,Wld,Wld,Wld])))])),SDefNoArgs("localVarTriples",Seq(Match(NoAnnoList(Op("ResDec",[Var("mods"),Var("type"),Var("vars"),Var("allow_list")]))),Seq(Build(Var("vars")),Call(SVar("map"),[LRule(RuleNoCond(NoAnnoList(Op("VarDec",[NoAnnoList(Op("Id",[Var("name")]))])),NoAnnoList(Tuple([Var("mods"),Var("type"),Var("name"),App(CallNoArgs(SVar("resFieldToString")),Var("allow_list"))]))))])))),SDefNoArgs("genLocalVarDecs",Seq(CallNoArgs(SVar("filterResDecs")),Seq(Call(SVar("mapconcat"),[CallNoArgs(SVar("localVarTriples"))]),Call(SVar("map"),[CallNoArgs(SVar("localVar"))]))))])),transformation-elem(Rules([RDefNoArgs("localVar",RuleNoCond(NoAnnoList(Tuple([Var("mods"),Var("type"),Var("name"),Var("allow_list")])),NoAnnoList(Op("LocalVarDecStm",[NoAnnoList(Op("LocalVarDec",[Var("mods"),Var("type"),NoAnnoList(List([NoAnnoList(Op("VarDec",[NoAnnoList(Op("Id",[Var("name")])),NoAnnoList(Op("NewInstance",[NoAnnoList(Op("None",[])),Var("type"),Var("allow_list"),NoAnnoList(Op("None",[]))]))]))]))]))]))))]))]))])