module deviceid/Syntax

 imports org/sugarj/java/init/InitTrans org/sugarj/languages/Java concretesyntax/Java


signature
  constructors
    ResDec       : iter-star() * JavaType() * iter-sep() * ResAccDecs() -> ResDec()
    ResBlock     : iter-star() -> ResBlock()
    ResMethodDec : JavaMethodDecHead() * ResMethodBody() -> ResMethodDec()
    ResAccModel  : ResAccDec()
    ResAccOrigin : ResAccDec()
    ResAccSerial : ResAccDec()
    ResAccSvn    : ResAccDec()
    ResAccCd     : ResAccDec()
    ResExpr      : JavaId() * ResAccDecs() -> JavaExpr()


strategies
  desugar =
    changed-tree(resAcc)

  desugar =
    changed-tree(resEStm)


rules

  resFields :
    ResAccModel() -> Lit(
                       String([Chars("model")])
                     )

  resFields :
    ResAccOrigin() -> Lit(
                        String([Chars("origin")])
                      )

  resFields :
    ResAccSerial() -> Lit(
                        String([Chars("serialNumber")])
                      )

  resFields :
    ResAccSvn() -> Lit(
                     String([Chars("svn")])
                   )

  resFields :
    ResAccCd() -> Lit(
                    String([Chars("cd")])
                  )


strategies
  resFieldToString =
    map(resFields)


rules

  resAcc :
    ResMethodDec(
      MethodDecHead(
        mods
      , a
      , b
      , Id(methodname)
      , d
      , e
      )
    , ResBlock(f)
    ) -> MethodDec(
           MethodDecHead(
             mods
           , a
           , b
           , Id(methodname)
           , d
           , e
           )
         , Block(
             <concat> [<genLocalVarDecs> f, <removeResDecs> f]
           )
         )

  resEStm :
    ResExpr(a, b) -> Invoke(
                       Method(
                         MethodName(
                           AmbName(a)
                         , Id("get")
                         )
                       )
                     , <resFieldToString> b
                     )


strategies
  filterResDecs =
    filter(?ResDec(_, _, _, _))

  removeResDecs =
    remove-all(?ResDec(_, _, _, _))

  localVarTriples =
    ?ResDec(mods, type, vars, allow_list)
    ; !vars
    ; map(
        \ VarDec(Id(name)) -> (mods, type, name, <resFieldToString> allow_list) \
      )

  genLocalVarDecs =
    filterResDecs
    ; mapconcat(localVarTriples)
    ; map(localVar)


rules

  localVar :
    (mods, type, name, allow_list) -> LocalVarDecStm(
                                        LocalVarDec(
                                          mods
                                        , type
                                        , [ VarDec(
                                              Id(name)
                                            , NewInstance(None(), type, allow_list, None())
                                            )
                                          ]
                                        )
                                      )